{"version":3,"sources":["Component/Navbar.js","Component/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","style","color","title","type","id","href","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","heading","backgroundColor","border","value","onChange","event","target","rows","disabled","length","newText","toUpperCase","toLowerCase","split","filter","element","defaultProps","App","setMode","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1a8aa59c.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a style={{color:props.mode==='light'?'black':'#f76a05'}} className=\"navbar-brand\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">About</a>\r\n              </li> */}\r\n\r\n            </ul>\r\n            {/* <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn btn-outline-danger\" type=\"submit\">Search</button>\r\n            </form> */}\r\n            <div className={`form-check form-switch text-${props.mode ===  'light'?'dark':'light'}`}>\r\n              <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} id=\"flexSwitchCheckDefault\" />\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  )\r\n}\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired\r\n}\r\nNavbar.defaultProps = {\r\n  title: 'set title here'\r\n}","import React, { useState } from 'react'\r\n\r\n\r\n\r\nexport default function TextForm(props) {\r\n    \r\n    const handleUpClick = () => {\r\n        // console.log(\"Uppercase was clicked\");\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n    }\r\n    const handlelowClick = () => {\r\n        // console.log(\"Lowercase was clicked\");\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n    }\r\n    const handleClearClick = () => {\r\n        // console.log(\"Clear was clicked\");\r\n        let newText = \"\";\r\n        setText(newText)\r\n    }\r\n    const handleOnChange = (event) => {\r\n        // console.log(\"On change\")\r\n        setText(event.target.value)\r\n    }\r\n\r\n    const [text, setText] = useState('')\r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{color: props.mode ===  'light'?'#010621':'white'}}>\r\n                <h1>{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control my-3\" style={{color:props.mode ==='dark'?'black':'black',backgroundColor: props.mode ===  'dark'?'#aaeaf2':'#aaf2d6',border:props.mode ===  'dark'?'1.5px solid #fa91e1':' 1.5px solid black'}} value={text} onChange={handleOnChange} id=\"myBox\" rows=\"12\"></textarea>\r\n                </div>\r\n                <button disabled={text.length===0} style={{color:props.mode ==='dark'?'white':'black',backgroundColor: props.mode ===  'dark'?'#2f9bc2':'#07f5aa',border:props.mode ===  'dark'?'1.5px solid white':' 1.5px solid black'}} className=\"btn mx-1 my-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n                <button disabled={text.length===0} style={{color:props.mode ==='dark'?'white':'black',backgroundColor: props.mode ===  'dark'?'#2f9bc2':'#07f5aa', border:props.mode ===  'dark'?'1.5px solid white':' 1.5px solid black'}} className=\"btn mx-1 my-1\" onClick={handlelowClick}>Convert to Lowercase</button>\r\n                <button disabled={text.length===0} style={{color:props.mode ==='dark'?'white':'black',backgroundColor: props.mode ===  'dark'?'#2f9bc2':'#07f5aa',border:props.mode ===  'dark'?'1.5px solid white':' 1.5px solid black'}} className=\"btn mx-1 my-1\" onClick={handleClearClick}>Clear Text</button>\r\n            </div>\r\n\r\n\r\n            <div className=\"container my-3\" style={{color: props.mode ===  'light'?'#010621':'white'}}>\r\n            <h3>Your text summary</h3>\r\n            <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\r\n            <p>{0.008 * text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} Minutes to read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Nothing to Preview\"}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","\nimport './App.css';\n// import About from './Component/About';\nimport Navbar from './Component/Navbar';\nimport React, { useState } from 'react';\nimport TextForm from './Component/TextForm';\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#010621';\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n    }\n  }\n  return (\n    <>\n     <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n      <div className=\"container my-3\">\n        <TextForm heading=\"Words Counting, Analyzing Reading Time\" mode={mode} />\n        \n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}